# Sample YAML file to validate and export an ARM template into a build artifact
# Requires a package.json file located in the target repository

trigger:
- master #collaboration branch

pool:
  vmImage: 'ubuntu-latest'

steps:

# Installs Node and the npm packages saved in your package.json file in the build

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(Build.Repository.LocalPath)/Build' #replace with the package.json folder
    verbose: true
  displayName: 'Install npm package'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# Enter the appropriate subscription and name for the source factory.

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)/Build' #replace with the package.json folder
    customCommand: 'run build validate $(Build.Repository.LocalPath) /subscriptions/$(subscriptionID)/resourceGroups/DTNA-Dev/providers/Microsoft.DataFactory/factories/DTNA-TSA-DEV'
  displayName: 'Validate'

# # Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# # The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)/Build' #replace with the package.json folder
    customCommand: 'run build export $(Build.Repository.LocalPath) /subscriptions/$(subscriptionID)/resourceGroups/DTNA-Dev/providers/Microsoft.DataFactory/factories/DTNA-TSA-DEV "ArmTemplate"'
  displayName: 'Validate and Generate ARM template'

# # Publish the artifact to be used as a source for a release pipeline.

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.Repository.LocalPath)/Build/ArmTemplate' #replace with the package.json folder
    artifact: 'ArmTemplates'
    publishLocation: 'pipeline'

# steps:
# - task: AzureResourceGroupDeployment@1
#   displayName: 'Azure Deployment:Create Or Update Resource Group action on DTNA-UAT'
#   inputs:
#     ConnectedServiceName: 'dtan-serviceconn'
#     resourceGroupName: 'DTNA-UAT'
#     location: 'Central India'
#     csmFile: '$(System.DefaultWorkingDirectory)/_sivakrishnasunkara.ADF-DEMO/ArmTemplates/ARMTemplateForFactory.json'
#     csmParametersFile: '$(System.DefaultWorkingDirectory)/_sivakrishnasunkara.ADF-DEMO/ArmTemplates/ARMTemplateParametersForFactory.json'

steps:
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'ARM Template deployment: Resource Group scope'
  inputs:
    azureResourceManagerConnection: 'dtan-serviceconn'
    subscriptionId: 'd9cff28b-eba4-4cb6-b562-2d88c545f931'
    resourceGroupName: 'DTNA-UAT'
    location: 'Central India'
    csmFile: '$(System.DefaultWorkingDirectory)/_adf_publish_source/DTNA-TSA-DEV/ARMTemplateForFactory.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/_adf_publish_source/DTNA-TSA-DEV/ARMTemplateParametersForFactory.json'
    overrideParameters: '-factoryName "DTNA-TSA-UAT" -DTNA_KV_properties_typeProperties_baseUrl "https://KV-DTNA-UAT.vault.azure.net/" -blobsource_properties_typeProperties_connectionString_secretName "Blob-Secret-Conn"'